---
- name: Login into the OpenShift cluster
  shell: >
    oc login -u kubeadmin -p pWx2Y-5oQdv-AjM6m-gTy5Q --server=https://api.mc.npss.jnpr.bos2.lab:6443 --insecure-skip-tls-verify=true
  register: result
  retries: 5
  delay: 10
  until: not result.failed

- name: create SealedSecret
  shell: oc create secret generic assisted-deployment-pull-secret --dry-run=client --from-file=.dockerconfigjson=pull-secret.txt --type=kubernetes.io/dockerconfigjson -o yaml | kubeseal --controller-name=sealed-secrets-controller --controller-namespace=sealed-secrets --scope cluster-wide --format json | jq '.spec.encryptedData.".dockerconfigjson"'
  register: pull_secret_encrypted

- debug:
    var: "{{ item }}"
  with_items: "{{ servers }}"

- name: Create folder for the template
  file:
    path: "{{ config_file_path }}"
    state: directory 

- name: Create folder for the patch
  file:
    path: "{{ config_file_path }}/patches"
    state: directory 

- name: Create all the template
  ansible.builtin.template:
     src: "{{ jinja_path }}/patches/{{ item }}.j2"
     dest: "{{ config_file_path }}/patches/{{ item }}"
  with_items: "{{ config_file }}"

- name: Create bmh template
  ansible.builtin.template:
     src: "{{ jinja_path }}/patches//bmh-patch.yaml.j2"
     dest: "{{ config_file_path }}/patches/{{ cluster_name }}-{{item.name}}-patch.yaml"
  with_items: "{{ servers }}"

- name: Create kustomization.yaml template
  ansible.builtin.template:
     src: "{{ jinja_path }}/kustomization.yaml.j2"
     dest: "{{ config_file_path }}/kustomization.yaml"
 